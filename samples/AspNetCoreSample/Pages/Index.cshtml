@page
@using Microsoft.AspNetCore.Authentication
@inject IAuthenticationService AuthenticationService
@model IndexModel
@{
    ViewData["Title"] = "Home";
}
<h1>Hello, @(User.Identity?.IsAuthenticated == true ? User.Identity.Name : "anonymous")</h1>

@if (User.Identity?.IsAuthenticated == true)
{
    <h2>Claims</h2>
    <dl>
        @foreach (var claim in User.Claims)
        {
            <dt>@claim.Type</dt>
            <dd>@claim.Value</dd>
        }
    </dl>
    var result = await AuthenticationService.AuthenticateAsync(HttpContext, null);
    var propertiesExcludeToken = result.Properties?.Items.Where(x => !(x.Key.StartsWith(".TokenNames") || x.Key.StartsWith(".Token."))).ToList();
    if (propertiesExcludeToken?.Any() == true)
    {
        <h2>Properties</h2>
        <dl>
            @foreach (var (key, value) in propertiesExcludeToken)
            {
                <dt>@key</dt>
                <dd>@value</dd>
            }
        </dl>
    }
    var tokens = result.Properties?.GetTokens().ToList();
    @if (tokens?.Any() == true)
    {
        <h2>Tokens</h2>
        <dl>
            @foreach (var token in tokens)
            {
                <dt>@token.Name</dt>
                <dd>@token.Value</dd>
            }
        </dl>
    }
    <a class="btn btn-danger" asp-page="/Account/Logout">Logout</a>
}
else
{
    <a class="btn btn-primary" asp-page="/Account/Login">Login</a>
}